esphome:
  name: esp-595sw01
      
esp8266:
  board: d1_mini

logger:
  baud_rate: 0

api:

ota:

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  ap:
    ssid: "Esp-595Sw01 Fallback Hotspot"

captive_portal:

sn74hc595:
  - id: 'sn74hc595_hub'
    data_pin: D5
    clock_pin: D7
    latch_pin: D6
   # oe_pin: D1
    sr_count: 2

number:
  platform: template
  name: inching time
  optimistic: true
  id: inching_t
  entity_category: config
  unit_of_measurement: 's'
  min_value: 0
  max_value: 120
  step: 10
  initial_value: 120

binary_sensor:
  - platform: gpio
    pin: RX
    id: auto_sw
    filters: invert
    on_press:
      then:
        - switch.turn_on: auto_relay  
    on_release:
      then:
        - switch.turn_off: auto_relay  
  
switch:
  - platform: gpio
    id: auto_relay
    name: "Auto SW"
    pin: TX
    inverted: true

############################
  - platform: gpio
    pin:
      sn74hc595: sn74hc595_hub
      # Use pin number 0
      number: 0
      inverted: false
    id: wing1_relay1_main
    name: "Wing1 Relay1 main"
    restore_mode : ALWAYS_OFF
    internal: true
    #on_turn_on:
    #  then:
    #  - switch.toggle: relay1
  - platform: gpio
    pin:
      sn74hc595: sn74hc595_hub
      # Use pin number 0
      number: 1
      inverted: false
    id: wing1_relay1_sub
    name: "Wing1 Relay1 sub"
    restore_mode : ALWAYS_OFF
    internal: true
  
  - platform: gpio
    pin:
      sn74hc595: sn74hc595_hub
      # Use pin number 0
      number: 2
      inverted: false
    id: wing1_relay2_main
    name: "Wing1 Relay2 main"
    restore_mode : ALWAYS_OFF
    internal: true

  - platform: gpio
    pin:
      sn74hc595: sn74hc595_hub
      # Use pin number 0
      number: 3
      inverted: false
    id: wing1_relay2_sub
    name: "Wing1 Relay2 sub"
    restore_mode : ALWAYS_OFF
    internal: true
  
  - platform: gpio
    pin:
      sn74hc595: sn74hc595_hub
      # Use pin number 0
      number: 4
      inverted: false
    id: wing1_relay3_main
    name: "Wing1 Relay3 main"
    restore_mode : ALWAYS_OFF
    internal: true
    
  - platform: gpio
    pin:
      sn74hc595: sn74hc595_hub
      # Use pin number 0
      number: 5
      inverted: false
    id: wing1_relay3_sub
    name: "Wing1 Relay3 sub"
    restore_mode : ALWAYS_OFF
    internal: true
   
  - platform: gpio
    pin:
      sn74hc595: sn74hc595_hub
      # Use pin number 0
      number: 6
      inverted: false
    id: wing1_relay4_main
    name: "Wing1 Relay4 main"
    restore_mode : ALWAYS_OFF  
    internal: true
    
  - platform: gpio
    pin:
      sn74hc595: sn74hc595_hub
      # Use pin number 0
      number: 7
      inverted: false
    id: wing1_relay4_sub
    name: "Wing1 Relay4 sub"
    restore_mode : ALWAYS_OFF    
    internal: true

  - platform: gpio
    pin:
      sn74hc595: sn74hc595_hub
      # Use pin number 0
      number: 15
      inverted: false
    id: wing2_relay1_main
    name: "Wing1 Relay1 main"
    restore_mode : ALWAYS_OFF
    internal: true
    #on_turn_on:
    #  then:
    #  - switch.toggle: relay1
  - platform: gpio
    pin:
      sn74hc595: sn74hc595_hub
      # Use pin number 0
      number: 14
      inverted: false
    id: wing2_relay1_sub
    name: "Wing1 Relay1 sub"
    restore_mode : ALWAYS_OFF
    internal: true
  
  - platform: gpio
    pin:
      sn74hc595: sn74hc595_hub
      # Use pin number 0
      number: 13
      inverted: false
    id: wing2_relay2_main
    name: "Wing1 Relay2 main"
    restore_mode : ALWAYS_OFF
    internal: true

  - platform: gpio
    pin:
      sn74hc595: sn74hc595_hub
      # Use pin number 0
      number: 12
      inverted: false
    id: wing2_relay2_sub
    name: "Wing1 Relay2 sub"
    restore_mode : ALWAYS_OFF
    internal: true
  
  - platform: gpio
    pin:
      sn74hc595: sn74hc595_hub
      # Use pin number 0
      number: 11
      inverted: false
    id: wing2_relay3_main
    name: "Wing1 Relay3 main"
    restore_mode : ALWAYS_OFF
    internal: true
    
  - platform: gpio
    pin:
      sn74hc595: sn74hc595_hub
      # Use pin number 0
      number: 10
      inverted: false
    id: wing2_relay3_sub
    name: "Wing1 Relay3 sub"
    restore_mode : ALWAYS_OFF
    internal: true
   
  - platform: gpio
    pin:
      sn74hc595: sn74hc595_hub
      # Use pin number 0
      number: 9
      inverted: false
    id: wing2_relay4_main
    name: "Wing1 Relay4 main"
    restore_mode : ALWAYS_OFF  
    internal: true
    
  - platform: gpio
    pin:
      sn74hc595: sn74hc595_hub
      # Use pin number 0
      number: 8
      inverted: false
    id: wing2_relay4_sub
    name: "Wing1 Relay4 sub"
    restore_mode : ALWAYS_OFF    
    internal: true

###############################

  - platform: template
    name: wing1 up
    id: wing1_up
    lambda: |-
      if (!id(wing1_relay1_sub).state && id(wing1_relay1_main).state) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - switch.turn_off: wing1_relay1_sub
      - switch.turn_on: wing1_relay1_main
      - delay: !lambda "return id(inching_t).state * 1000;"
      - switch.turn_off: wing1_up
      
    turn_off_action:
      - switch.turn_off: wing1_relay1_main
      - switch.turn_off: wing1_relay1_sub
      
  - platform: template
    name: wing1 down
    id: wing1_down
    lambda: |-
      if (id(wing1_relay1_sub).state && id(wing1_relay1_main).state) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - switch.turn_on: wing1_relay1_sub
      - switch.turn_on: wing1_relay1_main
      - delay: !lambda "return id(inching_t).state * 1000;"
      - switch.turn_off: wing1_down
    turn_off_action:
      - switch.turn_off: wing1_relay1_main
      - switch.turn_off: wing1_relay1_sub      
      
  - platform: template
    name: wing2 up
    id: wing2_up
    lambda: |-
      if (!id(wing1_relay2_sub).state && id(wing1_relay2_main).state) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - switch.turn_off: wing1_relay2_sub
      - switch.turn_on: wing1_relay2_main
      - delay: !lambda "return id(inching_t).state * 1000;"
      - switch.turn_off: wing2_up
    turn_off_action:
      - switch.turn_off: wing1_relay2_main
      - switch.turn_off: wing1_relay2_sub
      
  - platform: template
    name: wing2 down
    id: wing2_down
    lambda: |-
      if (id(wing1_relay2_sub).state && id(wing1_relay2_main).state) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - switch.turn_on: wing1_relay2_sub
      - switch.turn_on: wing1_relay2_main
      - delay: !lambda "return id(inching_t).state * 1000;"
      - switch.turn_off: wing2_down      
    turn_off_action:
      - switch.turn_off: wing1_relay2_main
      - switch.turn_off: wing1_relay2_sub   
      
  - platform: template
    name: wing3 up
    id: wing3_up
    lambda: |-
      if (!id(wing1_relay3_sub).state && id(wing1_relay3_main).state) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - switch.turn_off: wing1_relay3_sub
      - switch.turn_on: wing1_relay3_main
      - delay: !lambda "return id(inching_t).state * 1000;"
      - switch.turn_off: wing3_up      
    turn_off_action:
      - switch.turn_off: wing1_relay3_main
      - switch.turn_off: wing1_relay3_sub
      
  - platform: template
    name: wing3 down
    id: wing3_down
    lambda: |-
      if (id(wing1_relay3_sub).state && id(wing1_relay3_main).state) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - switch.turn_on: wing1_relay3_sub
      - switch.turn_on: wing1_relay3_main
      - delay: !lambda "return id(inching_t).state * 1000;"
      - switch.turn_off: wing3_down      
    turn_off_action:
      - switch.turn_off: wing1_relay3_main
      - switch.turn_off: wing1_relay3_sub    
      
  - platform: template
    name: wing4 up
    id: wing4_up
    lambda: |-
      if (!id(wing1_relay4_sub).state && id(wing1_relay4_main).state) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - switch.turn_off: wing1_relay4_sub
      - switch.turn_on: wing1_relay4_main
      - delay: !lambda "return id(inching_t).state * 1000;"
      - switch.turn_off: wing4_up      
    turn_off_action:
      - switch.turn_off: wing1_relay4_main
      - switch.turn_off: wing1_relay4_sub
      
  - platform: template
    name: wing4 down
    id: wing4_down
    lambda: |-
      if (id(wing1_relay4_sub).state && id(wing1_relay4_main).state) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - switch.turn_on: wing1_relay4_sub
      - switch.turn_on: wing1_relay4_main
      - delay: !lambda "return id(inching_t).state * 1000;"
      - switch.turn_off: wing4_down      
    turn_off_action:
      - switch.turn_off: wing1_relay4_main
      - switch.turn_off: wing1_relay4_sub                   
      
  - platform: template
    name: wing5 up
    id: wing5_up
    lambda: |-
      if (!id(wing2_relay1_sub).state && id(wing2_relay1_main).state) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - switch.turn_off: wing2_relay1_sub
      - switch.turn_on: wing2_relay1_main
      - delay: !lambda "return id(inching_t).state * 1000;"
      - switch.turn_off: wing5_up      
    turn_off_action:
      - switch.turn_off: wing2_relay1_main
      - switch.turn_off: wing2_relay1_sub
      
  - platform: template
    name: wing5 down
    id: wing5_down
    lambda: |-
      if (id(wing2_relay1_sub).state && id(wing2_relay1_main).state) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - switch.turn_on: wing2_relay1_sub
      - switch.turn_on: wing2_relay1_main
      - delay: !lambda "return id(inching_t).state * 1000;"
      - switch.turn_off: wing5_down      
    turn_off_action:
      - switch.turn_off: wing2_relay1_main
      - switch.turn_off: wing2_relay1_sub      
      
  - platform: template
    name: wing6 up
    id: wing6_up
    lambda: |-
      if (!id(wing2_relay2_sub).state && id(wing2_relay2_main).state) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - switch.turn_off: wing2_relay2_sub
      - switch.turn_on: wing2_relay2_main
      - delay: !lambda "return id(inching_t).state * 1000;"
      - switch.turn_off: wing6_up      
    turn_off_action:
      - switch.turn_off: wing2_relay2_main
      - switch.turn_off: wing2_relay2_sub
      
  - platform: template
    name: wing6 down
    id: wing6_down
    lambda: |-
      if (id(wing2_relay2_sub).state && id(wing2_relay2_main).state) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - switch.turn_on: wing2_relay2_sub
      - switch.turn_on: wing2_relay2_main
      - delay: !lambda "return id(inching_t).state * 1000;"
      - switch.turn_off: wing6_down      
    turn_off_action:
      - switch.turn_off: wing2_relay2_main
      - switch.turn_off: wing2_relay2_sub   
      
  - platform: template
    name: wing7 up
    id: wing7_up
    lambda: |-
      if (!id(wing2_relay3_sub).state && id(wing2_relay3_main).state) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - switch.turn_off: wing2_relay3_sub
      - switch.turn_on: wing2_relay3_main
      - delay: !lambda "return id(inching_t).state * 1000;"
      - switch.turn_off: wing7_up      
    turn_off_action:
      - switch.turn_off: wing2_relay3_main
      - switch.turn_off: wing2_relay3_sub
      
  - platform: template
    name: wing7 down
    id: wing7_down
    lambda: |-
      if (id(wing2_relay3_sub).state && id(wing2_relay3_main).state) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - switch.turn_on: wing2_relay3_sub
      - switch.turn_on: wing2_relay3_main
      - delay: !lambda "return id(inching_t).state * 1000;"
      - switch.turn_off: wing7_down      
    turn_off_action:
      - switch.turn_off: wing2_relay3_main
      - switch.turn_off: wing2_relay3_sub    
      
  - platform: template
    name: wing8 up
    id: wing8_up
    lambda: |-
      if (!id(wing2_relay4_sub).state && id(wing2_relay4_main).state) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - switch.turn_off: wing2_relay4_sub
      - switch.turn_on: wing2_relay4_main
      - delay: !lambda "return id(inching_t).state * 1000;"
      - switch.turn_off: wing8_up      
    turn_off_action:
      - switch.turn_off: wing2_relay4_main
      - switch.turn_off: wing2_relay4_sub
      
  - platform: template
    name: wing8 down
    id: wing8_down
    lambda: |-
      if (id(wing2_relay4_sub).state && id(wing2_relay4_main).state) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - switch.turn_on: wing2_relay4_sub
      - switch.turn_on: wing2_relay4_main
      - delay: !lambda "return id(inching_t).state * 1000;"
      - switch.turn_off: wing8_down      
    turn_off_action:
      - switch.turn_off: wing2_relay4_main
      - switch.turn_off: wing2_relay4_sub                         
    