esphome:
  name: esp-icebox

esp8266:
  board: d1_mini_pro

# Enable logging
logger:

# Enable Home Assistant API
api:
#  encryption:
#    key: "DzqdXz+elY4swg+DDpUF30oKju5EbA3d0DTBufpolA8="

ota:
#  password: "85bf06d5ca1e6b93920b402f30d0660c"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Esp-Icebox Fallback Hotspot"
#    password: "qOg7aqAzcP4p"

captive_portal:
    
i2c:
  sda: D2
  scl: D1

dallas:
  pin: D7

font:
  - file: "fonts/arial.ttf"
    id: my_font
    size: 16
    
display:
  - platform: ssd1306_i2c
    model: "SSD1306 128x32"
#    reset_pin: D0
    address: 0x3C
    lambda: |-
      it.printf(0, 0, id(my_font), "Now %.1f C", id(ice_temp).state);
      it.printf(0, 16, id(my_font), "Set %.1f C", id(set_temp).state);
#      it.printf(0, 0, id(my_font), "%.1f V", id(bt_volt).state);
#      it.printf(0, 24, id(my_font), "%.1f C", id(bt_temp).state);
#      it.strftime(0, 0, id(my_font), "%H:%M", id(esptime).now());
#      it.printf(0, 24, id(my_font), "Volt: %.1f V", id(bt_volt).state);      

sensor:
  - platform: rotary_encoder
    id: set_temp
#    name: "Rotary Encoder"
    pin_b: D5
    pin_a: D6
    min_value: 5
    max_value: 30
    on_value:
      - climate.control:
         id: pid_climate
         mode: COOL
         target_temperature: !lambda |-
            return id(set_temp).state;
         
      
  - platform: dallas
    index: 0 
#    address: 0x1c0000031edd2a28
    id: ice_temp

    



#  - platform: slow_pwm
#    pin: D8
#    id: cooler
#    period: 1s      
      
#climate:
#  - platform: thermostat
#    name: "Thermostat Climate Controller"
#    sensor: my_temperature_sensor
#    default_target_temperature_low: 35 °C
#    min_heating_off_time: 1s
#    min_heating_run_time: 1s
#    min_idle_time: 1s
#    heat_action:
#      - switch.turn_on: heater
#    idle_action:
#      - switch.turn_off: heater

climate:
  - platform: thermostat
    id: pid_climate
    name: "Thermostat Climate Controller"
    sensor: ice_temp
    default_target_temperature_high: 15 °C
    min_cooling_off_time: 3s
    min_cooling_run_time: 3s
    min_idle_time: 3s
    cool_action:
      - switch.turn_on: cooler
    idle_action:
      - switch.turn_off: cooler
      
#climate:
#  - platform: pid
#    id: pid_climate
#    name: "PID Climate Controller"
#    visual:
#      min_temperature: 3 °C
#      max_temperature: 20 °C
#      temperature_step: 1 °C
#    sensor: ice_temp
#    default_target_temperature: 5°C
#    cool_output: cooler
#    control_parameters:
#      kp: 0.11072
#      ki: 0.00035
#      kd: 8.71889

switch:
#  - platform: template
#    name: "PID Climate Autotune"
#    turn_on_action:
#      - climate.pid.autotune: pid_climate   
      
  - platform: gpio
    pin: D8
    id: cooler