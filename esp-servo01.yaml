esphome:
  name: esp-servo01
  on_boot:
    then:
      - servo.write:
          id: my_servo2
          level: 100.0%
      
      
esp8266:
  board: nodemcuv2

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Esp-Servo01 Fallback Hotspot"


captive_portal:
    
    
servo:
  - id: my_servo1
    output: pwm_output1
    min_level: 0%
    idle_level: 0%
    max_level: 100%
    
  - id: my_servo2
    output: pwm_output2
    min_level: 0%
    idle_level: 0%
    max_level: 100%
    
  - id: my_servo3
    output: pwm_output3
    min_level: 0%
    idle_level: 0%
    max_level: 100%
    
    
# Example output platform
# On ESP32, use ledc output
output:
  - platform: esp8266_pwm
    id: pwm_output1
    pin: D5
    frequency: 800 Hz    

  - platform: esp8266_pwm
    id: pwm_output2
    pin: D6
    frequency: 800 Hz        

  - platform: esp8266_pwm
    id: pwm_output3
    pin: D7
    frequency: 800 Hz    
    
number:
  - platform: template
    name: Servo Control1
    min_value: 0
    max_value: 100
    step: 1
    set_action:
      then:
        - servo.write:
            id: my_servo1
            level: !lambda 'return x / 100.0;'

  - platform: template
    name: Servo Control2
    min_value: 0
    max_value: 100
    step: 1
    set_action:
      then:
        - servo.write:
            id: my_servo2
            level: !lambda 'return (100 - x) / 100.0;'

  - platform: template
    name: Servo Control3
    min_value: 0
    max_value: 100
    step: 1
    set_action:
      then:
        - servo.write:
            id: my_servo3
            level: !lambda 'return x / 100.0;'       