esphome:
  name: esp-temp01

esp8266:
  board: nodemcuv2

# Enable logging
logger:
  
# Enable ome Assistant API
api:

ota:
#  password: "7f5fc8c463dd95f76fc7c637f4b7f7b7"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Esp-Temp01 Fallback Hotspot"
#    password: "qv1kx0lOuKTT"

captive_portal:

sensor:
  - platform: dht
    model: dht22
    pin: D5
    
    temperature:
      name: "Temperature"
      id: my_temperature_sensor 
    humidity:
      name: "Humidity"
      id: my_humidity_sensor
    update_interval: 5s


# Example configuration entry
output:
  - platform: esp8266_pwm
    pin: D6
    frequency: 10 Hz
#    name: "Heater"
    id: heater
      
      
#climate:
#  - platform: thermostat
#    name: "Thermostat Climate Controller"
#    sensor: my_temperature_sensor
#    default_target_temperature_low: 35 °C
#    min_heating_off_time: 1s
#    min_heating_run_time: 1s
#    min_idle_time: 1s
#    heat_action:
#      - switch.turn_on: heater
#    idle_action:
#      - switch.turn_off: heater


climate:
  - platform: pid
    id: pid_climate
    name: "PID Climate Controller"
    visual:
      min_temperature: 18 °C
      max_temperature: 35 °C
      temperature_step: 1 °C
    sensor: my_temperature_sensor
    default_target_temperature: 25°C
    heat_output: heater
    control_parameters:
      kp: 0.11072
      ki: 0.00035
      kd: 8.71889
      
#switch:
#  - platform: template
#    name: "PID Climate Autotune"
#    turn_on_action:
#      - climate.pid.autotune: pid_climate      
      
i2c:
  sda: D2
  scl: D1

display:
  - platform: lcd_pcf8574
    dimensions: 18x4
    address: 0x27
    lambda: |-
      it.printf(0,0,"Temp: %.1f", id(my_temperature_sensor).state);
      it.printf(0,1,"Humi: %.1f", id(my_humidity_sensor).state);